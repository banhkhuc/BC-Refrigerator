[{"E:\\Code\\BTLW\\student_management\\client\\src\\index.js":"1","E:\\Code\\BTLW\\student_management\\client\\src\\StudentManagement.js":"2","E:\\Code\\BTLW\\student_management\\client\\src\\reportWebVitals.js":"3","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\NavBar.js":"4","E:\\Code\\BTLW\\student_management\\client\\src\\Login\\Login.js":"5","E:\\Code\\BTLW\\student_management\\client\\src\\router.js":"6","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Notification.js":"7","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Home.js":"8","E:\\Code\\BTLW\\student_management\\client\\src\\Chat\\Chat.js":"9","E:\\Code\\BTLW\\student_management\\client\\src\\Chart\\Chart.js":"10","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\InfoStudent.js":"11","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\ListStudent.js":"12","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\AddForm.js":"13","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ImportData.js":"14","E:\\Code\\BTLW\\student_management\\client\\src\\Profile\\Profile.js":"15","E:\\Code\\BTLW\\student_management\\client\\src\\Profile\\ChangePassword.js":"16","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ListSV.js":"17","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ExportData.js":"18","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\NotiList.js":"19","E:\\Code\\BTLW\\student_management\\client\\src\\API\\CallApi.js":"20","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\OneRowData.js":"21","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\Sort.js":"22","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\NotiForm.js":"23","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\Noti.js":"24","E:\\Code\\BTLW\\student_management\\client\\src\\API\\Config.js":"25","E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\Comment.js":"26"},{"size":503,"mtime":1671790236701,"results":"27","hashOfConfig":"28"},{"size":684,"mtime":1671790236700,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1671790236701,"results":"30","hashOfConfig":"28"},{"size":8529,"mtime":1671868417025,"results":"31","hashOfConfig":"28"},{"size":6832,"mtime":1671838454234,"results":"32","hashOfConfig":"28"},{"size":1582,"mtime":1671790236702,"results":"33","hashOfConfig":"28"},{"size":832,"mtime":1671790236676,"results":"34","hashOfConfig":"28"},{"size":2728,"mtime":1671989049651,"results":"35","hashOfConfig":"28"},{"size":2836,"mtime":1671790236672,"results":"36","hashOfConfig":"28"},{"size":7232,"mtime":1671840453633,"results":"37","hashOfConfig":"28"},{"size":7585,"mtime":1671841881459,"results":"38","hashOfConfig":"28"},{"size":4303,"mtime":1671840791373,"results":"39","hashOfConfig":"28"},{"size":7379,"mtime":1671989067432,"results":"40","hashOfConfig":"28"},{"size":2164,"mtime":1671989067432,"results":"41","hashOfConfig":"28"},{"size":7596,"mtime":1671790236698,"results":"42","hashOfConfig":"28"},{"size":4232,"mtime":1671790236697,"results":"43","hashOfConfig":"28"},{"size":6297,"mtime":1671842105836,"results":"44","hashOfConfig":"28"},{"size":945,"mtime":1671790236686,"results":"45","hashOfConfig":"28"},{"size":3599,"mtime":1671840498606,"results":"46","hashOfConfig":"28"},{"size":289,"mtime":1671790236669,"results":"47","hashOfConfig":"28"},{"size":1615,"mtime":1671790236689,"results":"48","hashOfConfig":"28"},{"size":6525,"mtime":1671866592677,"results":"49","hashOfConfig":"28"},{"size":3747,"mtime":1671790236675,"results":"50","hashOfConfig":"28"},{"size":7497,"mtime":1671790236674,"results":"51","hashOfConfig":"28"},{"size":51,"mtime":1671790236669,"results":"52","hashOfConfig":"28"},{"size":1333,"mtime":1671790236674,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xcup4d",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},"E:\\Code\\BTLW\\student_management\\client\\src\\index.js",[],["115","116"],"E:\\Code\\BTLW\\student_management\\client\\src\\StudentManagement.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\reportWebVitals.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\NavBar.js",["117"],"/* eslint-disable react/jsx-no-duplicate-props */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport \"boxicons\";\r\nimport { AiOutlineHome } from \"react-icons/ai\";\r\nimport { BsClipboardData } from \"react-icons/bs\";\r\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport routes from \"../router\";\r\nimport { Redirect } from \"react-router\";\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      role: \"\",\r\n      openNav: false,\r\n      chooseHome: true,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: sessionStorage.getItem(\"role\"),\r\n    });\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({\r\n      openNav: !this.state.openNav,\r\n    });\r\n  };\r\n\r\n  chooseHome = () => {\r\n    this.setState({\r\n      chooseHome: true,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  chooseNoti = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: true,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  chooseChat = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: false,\r\n      chooseChat: true,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  chooseList = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: true,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  chooseChart = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: true,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  chooseProfile = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: false,\r\n      chooseProfile: true,\r\n    });\r\n  };\r\n\r\n  chooseLogout = () => {\r\n    // this.setState({\r\n    //   chooseHome: false,\r\n    //   chooseNoti: false,\r\n    //   chooseChat: false,\r\n    //   chooseList: false,\r\n    //   chooseChart: false,\r\n    //   chooseInfoTeacher: false,\r\n    //   chooseProfile: false,\r\n    // });\r\n    localStorage.removeItem(\"accessToken\");\r\n    sessionStorage.removeItem(\"msv\");\r\n    sessionStorage.removeItem(\"userId\");\r\n    sessionStorage.removeItem(\"role\");\r\n    sessionStorage.removeItem(\"lop\");\r\n    sessionStorage.removeItem(\"item\");\r\n  };\r\n\r\n  chooseInfoTeacher = () => {\r\n    this.setState({\r\n      chooseHome: false,\r\n      chooseNoti: false,\r\n      chooseChat: false,\r\n      chooseList: false,\r\n      chooseChart: false,\r\n      chooseInfoTeacher: true,\r\n      chooseProfile: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"accessToken\") == null) {\r\n      return <Redirect to='/login' />;\r\n    }\r\n    var {\r\n      role,\r\n      openNav,\r\n      chooseHome,\r\n      chooseNoti,\r\n      chooseChat,\r\n      chooseList,\r\n      chooseChart,\r\n      chooseInfoTeacher,\r\n      chooseProfile,\r\n    } = this.state;\r\n    return (\r\n      <Router>\r\n        <section className='body'>\r\n          <div className={openNav ? \"sidebar open\" : \"sidebar\"}>\r\n            <div className='logo-details'>\r\n              {/* cai 3 gach */}\r\n              <div className='logo_name'>MENU</div>\r\n              <div id='btn' onClick={this.open}>\r\n                <box-icon name='menu' color='#ffffff'></box-icon>\r\n              </div>\r\n            </div>\r\n            <ul className='nav-list'>\r\n              <li\r\n                className={chooseHome ? \"home\" : \"\"}\r\n                onClick={this.chooseHome}>\r\n                <Link to='/home'>\r\n                  <div className='icon'>\r\n                    <AiOutlineHome />\r\n                  </div>\r\n                  <span className='links_name'>Trang chủ</span>\r\n                </Link>\r\n                <span className='tooltip'>Trang chủ</span>\r\n              </li>\r\n\r\n              <li\r\n                className={chooseNoti ? \"home\" : \"\"}\r\n                onClick={this.chooseNoti}>\r\n                <Link to='/home/notification'>\r\n                  {/* thong bao */}\r\n                  <div className='icon'>\r\n                    <IoMdNotificationsOutline />\r\n                  </div>\r\n                  <span className='links_name'>Thông Báo</span>\r\n                </Link>\r\n                <span className='tooltip'>Thông Báo</span>\r\n              </li>\r\n              <li\r\n                className={chooseChat ? \"home\" : \"\"}\r\n                onClick={this.chooseChat}>\r\n                <Link to='/home/chat'>\r\n                  <div className='icon'>\r\n                    <span className='fa fa-comment-dots'></span>\r\n                  </div>\r\n                  <span className='links_name'>Chat</span>\r\n\r\n                  <span className='tooltip'>Chat</span>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                id='bangdiem'\r\n                className={\r\n                  (chooseList ? \"home\" : \"\") +\r\n                  (role === \"student\" ? \"student\" : \"\")\r\n                }\r\n                onClick={this.chooseList}>\r\n                <Link to='/home/list-students'>\r\n                  {/* danh sach sinh vien */}\r\n                  <div className='icon'>\r\n                    <BsClipboardData />\r\n                  </div>\r\n                  <span className='links_name'>Danh sách</span>\r\n                </Link>\r\n                <span className='tooltip'>Danh sách</span>\r\n              </li>\r\n              <li\r\n                className='chart'\r\n                className={\r\n                  (chooseChart ? \"home\" : \"\") +\r\n                  (role === \"student\" ? \"student\" : \"\")\r\n                }\r\n                onClick={this.chooseChart}>\r\n                <Link to='/home/chart'>\r\n                  <div className='icon'>\r\n                    <span className='fa fa-chart-bar'></span>\r\n                  </div>\r\n                  <span className='links_name'>Biểu đồ </span>\r\n                </Link>\r\n                <span className='tooltip'>Biểu đồ </span>\r\n              </li>\r\n              <li\r\n                className='profile'\r\n                className={\r\n                  (chooseProfile ? \"home\" : \"\") +\r\n                  (role === \"student\" ? \"\" : \"student\")\r\n                }\r\n                onClick={this.chooseProfile}>\r\n                <Link to='/home/profile'>\r\n                  <div className='icon'>\r\n                    <span className='fa fa-id-card'></span>{\" \"}\r\n                  </div>\r\n                  <span className='links_name'>Hồ sơ</span>\r\n\r\n                  <span className='tooltip'>Hồ sơ</span>\r\n                </Link>\r\n              </li>\r\n              <li className='logout' onClick={this.chooseLogout}>\r\n                <a href='/'>\r\n                  {/* Log out */}\r\n                  <div className='icon'>\r\n                    <BiLogOut />\r\n                  </div>\r\n                  <span className='links_name'>Đăng Xuất</span>\r\n                </a>\r\n                <span className='tooltip'>Đăng Xuất</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className={openNav ? \"nav_open\" : \"nav_close\"}>\r\n            <div>{this.show(routes)}</div>\r\n          </div>\r\n        </section>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  show = (routes) => {\r\n    var result = null;\r\n    if (routes.length > 0) {\r\n      result = routes.map((route, index) => {\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            component={route.main}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return <Switch>{result}</Switch>;\r\n  };\r\n}\r\n\r\nexport default NavBar;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\Login\\Login.js",["118","119"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport Logo from \"./uet.png\";\r\nimport AppLogo from \"./applogo_1.png\";\r\n\r\nconst Body = styled.div`\r\n  // background-color: rgb(186, 248, 255);\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100vh;\r\n`;\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\nconst _Input = styled.input`\r\n  border: 0;\r\n  border-bottom: 2px solid #09599b;\r\n  outline: 0;\r\n  background: transparent;\r\n  width: 60%;\r\n`;\r\nconst _Button = styled.button`\r\n  width: 260px;\r\n  margin-left: 70px;\r\n  height: 40px;\r\n  background-color: #2573b3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 1.8rem;\r\n  transition: all 0.3s ease;\r\n  opacity: 0.9;\r\n  &:hover {\r\n    opacity: 1;\r\n    box-shadow: 0 4px 8px 4px rgba(0, 0, 0, 0.2),\r\n      0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  padding: 0px 5px 2px 0px;\r\n  border-bottom: 2px solid #09599b;\r\n  margin-left: 18%;\r\n  // margin-right: 5px;\r\n  color: #2573b3;\r\n`;\r\nconst Title = styled.p`\r\n  text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-weight: 600;\r\n  font-size: 3rem;\r\n  color: #2573b3;\r\n  padding: 20px 0px 20px 0px;\r\n`;\r\nconst Title1 = styled.p`\r\n  width: 150px;\r\n  margin: auto;\r\n  text-align: center;\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  opacity: 0.8;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  width: 400px;\r\n  height: 500px;\r\n  margin-top: 100px;\r\n  background-color: white;\r\n  margin-left: 30%;\r\n  border-radius: 60px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\nconst Input_container = styled.div`\r\n  padding: 0 0 10px 0;\r\n`;\r\nconst Uet_logo = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-left: 150px;\r\n  margin-top: 20px;\r\n`;\r\nconst App_logo = styled.img`\r\n  width: 600px;\r\n  height: 250px;\r\n`;\r\nconst App_logo_container = styled.div`\r\n  margin: 160px 0 0 150px;\r\n`;\r\nconst Form_container = styled.div``;\r\nconst Line1 = styled.div`\r\n  top: -11rem;\r\n  left: -6rem;\r\n  position: absolute;\r\n  width: 500px;\r\n  height: 350px;\r\n  border: 4px solid rgb(12, 64, 124);\r\n  border-radius: 50%;\r\n`;\r\nconst Line2 = styled.div`\r\n  position: absolute;\r\n  overflow: hidden;\r\n  width: 450px;\r\n  height: 350px;\r\n  border: 4px solid rgb(12, 64, 124);\r\n  border-radius: 50%;\r\n  right: -6.5rem;\r\n  bottom: -6rem;\r\n  opacity: 0.8;\r\n`;\r\nconst Comment = styled.p`\r\n  margin: auto;\r\n  max-width: 380px;\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  color: rgb(9, 49, 95);\r\n  transition: all 0.3s ease;\r\n  font-weight: bold;\r\n  opacity: 0.6;\r\n  line-height: 3rem;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Comment1 = styled.p`\r\n  margin: auto;\r\n  max-width: 380px;\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  color: rgb(9, 49, 95);\r\n  transition: all 0.3s ease;\r\n  font-weight: bold;\r\n  opacity: 0.6;\r\n  line-height: 3rem;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Comment2 = styled.p`\r\n  margin: auto;\r\n  max-width: 380px;\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  color: rgb(9, 49, 95);\r\n  transition: all 0.3s ease;\r\n  font-weight: bold;\r\n  opacity: 0.6;\r\n  line-height: 3rem;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isLogin: false,\r\n    };\r\n    this.handle = this.handle.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  handle = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"accessToken\", res.data.accessToken);\r\n        sessionStorage.setItem(\"role\", res.data.role);\r\n        sessionStorage.setItem(\"userId\", res.data.userId);\r\n        sessionStorage.setItem(\"msv\", res.data.username);\r\n        sessionStorage.setItem(\"lop\", res.data.lop);\r\n        console.log(res);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    this.setState({\r\n      isLogin: localStorage.getItem(\"accessToken\") != null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLogin === true) {\r\n      return <Redirect to='/home' />;\r\n    } else {\r\n      return (\r\n        <Body>\r\n          <Line1></Line1>\r\n          <Line2></Line2>\r\n          <Container>\r\n            <App_logo_container>\r\n              <App_logo src={AppLogo} />\r\n              <Comment>ProductMove</Comment>\r\n              <Comment1>Hệ thống hỗ trợ quản lí vòng đời sản phẩm</Comment1>\r\n              \r\n            </App_logo_container>\r\n            <Form_container>\r\n              <Form action='' method='post' onSubmit={this.submit}>\r\n                <Uet_logo src={Logo} />\r\n                <Title>ĐĂNG NHẬP</Title>\r\n                <Input_container>\r\n                  <Icon>\r\n                    <FaUser />\r\n                  </Icon>\r\n                  <_Input\r\n                    type='text'\r\n                    required\r\n                    name='username'\r\n                    placeholder='Email đăng nhập'\r\n                    value={this.state.username}\r\n                    onChange={this.handle}\r\n                    autoFocus\r\n                  />\r\n                </Input_container>\r\n                <br />\r\n                <Input_container>\r\n                  <Icon>\r\n                    <RiLockPasswordFill />\r\n                  </Icon>\r\n                  <_Input\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='Mật khẩu'\r\n                    // value={this.state.password}\r\n\r\n                    onChange={this.handle}></_Input>\r\n                </Input_container>\r\n                <br />\r\n                {/* <Title1>Quên mật khẩu?</Title1> */}\r\n                <_Button onClick={this.submit}>Đăng nhập</_Button>\r\n                <br />\r\n              </Form>\r\n            </Form_container>\r\n          </Container>\r\n        </Body>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\router.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Notification.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Home.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\Chat\\Chat.js",["120"],"// import React from \"react\";\r\n// import { db } from \"./Firebase.js\";\r\n// import moment from \"moment\";\r\n\r\n// // export const Chat = () => {\r\n//   // var Message = ``;\r\n//   // var savedMessage = true;\r\n//   const username = sessionStorage.getItem(\"msv\");\r\n//   // var showChat = document.getElementById(\"messages\");\r\n//   const sendMessage = async (e) => {\r\n//     e.preventDefault();\r\n//     // get values to be submitted\r\n//     const timestamp = Date.now();\r\n//     const messageInput = document.getElementById(\"message-input\");\r\n//     const message = messageInput.value;\r\n//     console.log(message);\r\n\r\n//     // clear the input box\r\n//     messageInput.value = \"\";\r\n\r\n//     //auto scroll to bottom\r\n//     document\r\n//       .getElementById(\"messages\")\r\n//       .scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\r\n\r\n//     // create db collection and send in the data\r\n//     await db.ref(\"messages/\" + timestamp).set({\r\n//       username,\r\n//       message,\r\n//       timestamp,\r\n//     });\r\n\r\n//     // savedMessage = true;\r\n//   };\r\n//   var message = \"\";\r\n//   // const displayChat = () => {\r\n//   const fetchChat = db.ref(\"messages/\");\r\n//   // check for new messages using the onChildAdded event listener\r\n//   fetchChat.on(\"child_added\", function (snapshot) {\r\n//     const messages = snapshot.val();\r\n//     message += `<li class=${\r\n//       username === messages.username ? \"sent\" : \"receive\"\r\n//     }><span>${messages.username}:${moment(\r\n//       messages.timestamp\r\n//     ).calendar()}: </span>${messages.message}</li>`;\r\n\r\n//     // if (savedMessage) {\r\n//     //   document.getElementById(\"messages\").append(message);\r\n//     // }\r\n//     var messageElement = document.createElement(\"div\");\r\n//     messageElement.innerText = message;\r\n//     document.getElementById(\"messages\").append(messageElement);\r\n//   });\r\n//   // };\r\n//   return (\r\n//     <div id=\"chat\">\r\n//       <ul id=\"messages\"></ul>\r\n//       <form id=\"message-form\" onSubmit={(e) => sendMessage(e)}>\r\n//         <input id=\"message-input\" type=\"text\" />\r\n//         <button id=\"message-btn\" type=\"submit\">\r\n//           Send\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport { PeopleSettings } from \"react-chat-engine\";\r\nexport const Chat = () => {\r\n  const username = sessionStorage.getItem(\"msv\");\r\n  return (\r\n    <div style={{ overflow: \"hidden\" }}>\r\n      <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"458c42a0-f2ff-4ffa-bafa-b0f1066903ee\"\r\n        userName={username}\r\n        userSecret={username}\r\n\r\n        // onNewMessage={() =>\r\n        //   new Audio(\r\n        //     \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\r\n        //   ).play()\r\n        // }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\Chart\\Chart.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\InfoStudent.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\ListStudent.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\AddForm.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ImportData.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\Profile\\Profile.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\Profile\\ChangePassword.js",["121","122","123"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CallApi from \"../API/CallApi\";\r\nimport styled from \"styled-components\";\r\nimport { HiKey } from \"react-icons/hi\";\r\nimport { HiOutlineKey } from \"react-icons/hi\";\r\nimport { MdOutlineVerified } from \"react-icons/md\";\r\n\r\nconst ChangePassSite = styled.div`\r\n  width: 30%;\r\n  margin: auto;\r\n  text-align: center;\r\n  background-color: rgba(233, 233, 233, 0.986);\r\n  padding: 3rem 0 3rem 0;\r\n  margin-top: 5vh;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px 4px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst ChangePassTitle = styled.h1`\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-weight: bold;\r\n  color: #2573b3;\r\n`;\r\n\r\nconst ChangePassForm = styled.form`\r\n  width: 90%;\r\n  margin: auto;\r\n  // background-color: lightgray;\r\n`;\r\n\r\nconst InforInput = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid #09599b;\r\n  outline: none;\r\n  background-color: transparent;\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  border-bottom: 2px solid #09599b;\r\n  padding: 0.4rem 0.4rem 0.2rem 0.3rem;\r\n  box-sizing: border-box;\r\n  color: #09599b;\r\n`;\r\n\r\nconst Input_container = styled.div`\r\n  display: flex;\r\n  max-width: 53%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  // background-color: whitesmoke;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  opacity: 0.8;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    opacity: 1;\r\n    box-shadow: 0 4px 8px 4px rgba(0, 0, 0, 0.2),\r\n      0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\n\r\nconst btnName = styled.span``;\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      old_pass: \"\",\r\n      new_pass: \"\",\r\n      cf_new_pass: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    var { old_pass, new_pass, cf_new_pass } = this.state;\r\n    var username = sessionStorage.getItem(\"msv\");\r\n\r\n    if (new_pass !== cf_new_pass) {\r\n      alert(\"Xác nhận mật khẩu không khớp\");\r\n    } else if (old_pass === new_pass) {\r\n      alert(\"Mật khẩu mới không được trùng mật khẩu cũ\");\r\n    } else {\r\n      CallApi(\"change-password\", \"PATCH\", {\r\n        username,\r\n        old_pass,\r\n        new_pass,\r\n      }).then((res) => {\r\n        alert(res.data.message);\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ChangePassSite>\r\n        <ChangePassTitle>ĐỔI MẬT KHẨU</ChangePassTitle>\r\n        <ChangePassForm>\r\n          <Input_container>\r\n            <Icon>\r\n              <HiKey></HiKey>\r\n            </Icon>\r\n            <InforInput\r\n              placeholder='Nhập mật khẩu cũ...'\r\n              type='password'\r\n              name='old_pass'\r\n              onChange={this.onChange}\r\n              required\r\n            />\r\n          </Input_container>\r\n          <br />\r\n          <Input_container>\r\n            <Icon>\r\n              <HiOutlineKey></HiOutlineKey>\r\n            </Icon>\r\n            <InforInput\r\n              placeholder='Nhập mật khẩu mới...'\r\n              type='password'\r\n              name='new_pass'\r\n              onChange={this.onChange}\r\n              required\r\n              id='password'\r\n            />\r\n          </Input_container>\r\n          <br />\r\n          <Input_container>\r\n            <Icon>\r\n              <MdOutlineVerified></MdOutlineVerified>\r\n            </Icon>\r\n            <InforInput\r\n              placeholder='Xác nhận mật khẩu mới...'\r\n              type='password'\r\n              name='cf_new_pass'\r\n              onChange={this.onChange}\r\n              id='cf_password'\r\n            />\r\n          </Input_container>\r\n        </ChangePassForm>\r\n        <br />\r\n        <Btn type='submit' className='btn btn-primary' onClick={this.onSubmit}>\r\n          <btnName className='fa fa-save'>&nbsp;</btnName> Ghi nhận\r\n        </Btn>{\" \"}\r\n        <Link to='/home/profile' className='btn btn-danger'>\r\n          <btnName className='fa fa-close'>&nbsp; Hủy bỏ</btnName>\r\n        </Link>\r\n      </ChangePassSite>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ListSV.js",["124"],"/* eslint-disable react/style-prop-object */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport Sort from \"./Sort\";\r\nimport OneRowData from \"./OneRowData\";\r\nimport CallApi from \"./../../API/CallApi\";\r\n\r\nclass ListSV extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      students: this.props.students,\r\n      filter: {\r\n        msv: \"\",\r\n        name: \"\",\r\n        gender: \"\",\r\n        gpa: \"\",\r\n        status: \"\",\r\n      },\r\n      sort: {\r\n        by: \"msv\",\r\n        value: 1,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      students: this.props.students,\r\n    });\r\n  }\r\n\r\n  onDelete = (_id, msv) => {\r\n    this.props.onDelete(_id, msv);\r\n  };\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      filter: {\r\n        [name]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  onSort = (sortBy, sortValue) => {\r\n    this.setState({\r\n      sort: {\r\n        by: sortBy,\r\n        value: sortValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { filter, sort } = this.state;\r\n    var students = this.props.students;\r\n    console.log(students);\r\n    if (filter) {\r\n      if (filter.msv) {\r\n        students = students.filter((student) => {\r\n          return student.msv.indexOf(filter.msv) === 0;\r\n        });\r\n      }\r\n      if (filter.name) {\r\n        students = students.filter((student) => {\r\n          return student.name.indexOf(filter.name) !== -1;\r\n        });\r\n      }\r\n      if (filter.gender) {\r\n        students = students.filter((student) => {\r\n          if (filter.gender === \"all\") return true;\r\n          else return student.gender === filter.gender;\r\n        });\r\n      }\r\n      if (filter.gpa) {\r\n        students = students.filter((student) => {\r\n          if (filter.gpa === \"all\") return true;\r\n          else if (filter.gpa === \"2.0\") return student.gpa < 2.0;\r\n          else {\r\n            var gpa = filter.gpa.toString().split(\"-\");\r\n            return student.gpa > gpa[0] && student.gpa <= gpa[1];\r\n          }\r\n        });\r\n      }\r\n      if (filter.status) {\r\n        students = students.filter((student) => {\r\n          if (filter.status === \"all\") return true;\r\n          else return student.status === filter.status;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (sort) {\r\n      if (sort.by === \"msv\") {\r\n        students.sort((student1, student2) => {\r\n          //console.log(typeof student1.name,'-',student2.name);\r\n          if (student1.msv > student2.msv) return sort.value;\r\n          else if (student1.msv < student2.msv) return -sort.value;\r\n          else return 0;\r\n        });\r\n      } else if (sort.by === \"name\") {\r\n        students.sort((student1, student2) => {\r\n          if (student1.name.localeCompare(student2.name) < 0) return sort.value;\r\n          else if (student1.name.localeCompare(student2.name) > 0)\r\n            return -sort.value;\r\n          else return 0;\r\n        });\r\n      } else {\r\n        students.sort((student1, student2) => {\r\n          if (student1.gpa > student2.gpa) return sort.value;\r\n          else if (student1.gpa < student2.gpa) return -sort.value;\r\n          else return 0;\r\n        });\r\n      }\r\n    }\r\n    var studentList = students.map((student, index) => {\r\n      return (\r\n        <OneRowData\r\n          key={student.id}\r\n          index={index}\r\n          student={student}\r\n          onDelete={this.onDelete}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <table className=\"table table-bordered table-hover\">\r\n          <Sort onSort={this.onSort} />\r\n\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"msv\"\r\n                  value={filter.msv}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={filter.name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n              <td></td>\r\n              <td>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"gender\"\r\n                  value={filter.gender}\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value=\"all\"></option>\r\n                  <option value=\"Nam\">Nam</option>\r\n                  <option value=\"Nữ\">Nữ</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"gpa\"\r\n                  value={filter.gpa}\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value=\"all\"></option>\r\n                  <option value=\"3.6-4.0\">3.6 - 4.0</option>\r\n                  <option value=\"3.2-3.6\">3.2 - 3.6</option>\r\n                  <option value=\"2.5-3.0\">2.5 - 3.2</option>\r\n                  <option value=\"2.0-2.5\">2.0 - 2.5</option>\r\n                  <option value=\"2.0\">&lt; 2.0</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  value={filter.status}\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value=\"all\"></option>\r\n                  <option value=\"Không\">Không </option>\r\n                  <option value=\"Nguy cơ nghỉ học\">Nguy cơ nghỉ học</option>\r\n                  <option value=\"Cảnh báo học vụ\">Cảnh báo học vụ</option>\r\n                  <option value=\"Thiếu tín chỉ\">Thiếu tín chỉ</option>\r\n                  <option value=\"Thiếu học phí\">Thiếu học phí</option>\r\n                  <option value=\"Khen thưởng\">Khen thưởng</option>\r\n                </select>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n            {studentList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListSV;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\ExportData.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\NotiList.js",["125","126"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React, { useState, useEffect, useReducer } from \"react\";\r\nimport NotiForm from \"./NotiForm\";\r\nimport Noti from \"./Noti\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst Noti_Form = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  background-color: rgb(190, 185, 185);\r\n  min-height: 50vh;\r\n  padding: 30px 0 30px 0;\r\n  margin-top: 5vh;\r\n  border-radius: 20px;\r\n  margin-bottom: 10vh;\r\n  // overflow: hidden;\r\n`;\r\n\r\nconst Noti_title = styled.h1`\r\n  width: 80%;\r\n  margin: auto;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3);\r\n  font-size: 5rem;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: #0b5592;\r\n`;\r\n\r\nfunction TodoList(props) {\r\n  const [todos, setTodos] = useState([]);\r\n  const [lop, setLop] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchNotiList() {\r\n      const lop = sessionStorage.getItem(\"lop\").split(\", \");\r\n      setLop(lop);\r\n\r\n      const item =\r\n        sessionStorage.getItem(\"item\") === null\r\n          ? sessionStorage.getItem(\"lop\")\r\n          : sessionStorage.getItem(\"item\");\r\n      console.log(item);\r\n      await axios\r\n        .get(`http://localhost:5000/post/${item}`)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setTodos(response.data.getpost);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    fetchNotiList();\r\n  }, []);\r\n\r\n  const ChooseClass = async (item) => {\r\n    sessionStorage.setItem(\"item\", item);\r\n    await axios\r\n      .get(`http://localhost:5000/post/${item}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTodos(response.data.getpost);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.content || /^\\s*$/.test(todo.content)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const removeTodo = async (id) => {\r\n    await axios.delete(`http://localhost:5000/post/delete/${id}`);\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(removedArr);\r\n  };\r\n  const role = props.role;\r\n  if (role !== \"student\") {\r\n    return (\r\n      <>\r\n        <div className=\"dropdown\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn dropdown-toggle\"\r\n            id=\"dropdownMsv\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"true\"\r\n          >\r\n            Chọn cơ sở &nbsp; <span className=\"fa fa-caret-square-o-down\"></span>\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            {lop.map((item, index) => (\r\n              <li key={index} onClick={() => ChooseClass(item)}>\r\n                <a role=\"button\">{item}</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <label\r\n          style={{\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {sessionStorage.getItem(\"item\")}\r\n        </label>\r\n        <Noti_Form>\r\n          <Noti_title>THÔNG BÁO</Noti_title>\r\n          <NotiForm todos={todos} onSubmit={addTodo} />\r\n          <Noti role={role} todos={todos} removeTodo={removeTodo} />\r\n        </Noti_Form>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Noti_Form>\r\n        <Noti_title>THÔNG BÁO</Noti_title>\r\n        <Noti role={role} todos={todos} removeTodo={removeTodo} />\r\n      </Noti_Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\API\\CallApi.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\OneRowData.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\ListStudent\\Components\\Sort.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\NotiForm.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\Noti.js",["127","128","129"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NotiForm from \"./NotiForm\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport styled from \"styled-components\";\r\nimport Comment from \"./Comment\";\r\nimport axios from \"axios\";\r\nimport { FaReplyAll } from \"react-icons/fa\";\r\n\r\nconst Noti_element = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  margin: auto;\r\n  background-color: #0c67b3;\r\n  padding: 1.5rem 1.5rem 1.5rem 1.5rem;\r\n  margin-top: 10px;\r\n  min-height: 8rem;\r\n  box-sizing: border-box;\r\n  border-radius: 20px;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    background-color: #0b5592;\r\n    cursor: pointer;\r\n    box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.2),\r\n      6px 6px 20px 0px rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\nconst Noti_content = styled.div`\r\n  width: 90%;\r\n  color: white;\r\n`;\r\nconst Noti_icon = styled.div`\r\n  width: 8rem;\r\n  height: 2rem;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  float: right;\r\n`;\r\nconst Noti_reply = styled.div`\r\n  width: 75%;\r\n  display: flex;\r\n  // background-color: blue;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\nconst Reply_content = styled.textarea`\r\n  width: 85%;\r\n  // height: 5rem;\r\n  max-height: 5rem;\r\n  resize: none;\r\n  border: none;\r\n  padding: 0.5rem 0.5rem;\r\n  border-radius: 0 0 0 5px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst SendRep_btn = styled.button`\r\n  opacity: 0.9;\r\n  width: 15%;\r\n  border: none;\r\n  background-color: rgb(22, 82, 150);\r\n  color: white;\r\n  transition: all 0.3s ease;\r\n  border-radius: 0 0 5px 0;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.2),\r\n      6px 6px 20px 0px rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\n\r\nconst Todo = ({ role, todos, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const [comment, setComment] = useState();\r\n  const [cmt, setCmt] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setComment(false);\r\n  }, []);\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n  const [showReply, setShow] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setCmt(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (id) => {\r\n    console.log(id);\r\n    axios.patch(`http://localhost:5000/post/comment/${id}`, {\r\n      msv: sessionStorage.getItem(\"msv\"),\r\n      cmt: cmt,\r\n    });\r\n    const newCmt = { msv: sessionStorage.getItem(\"msv\"), cmt: cmt };\r\n    for (let i = 0; i < todos.length; i++) {\r\n      if (todos[i].id === id) {\r\n        todos[i].comment.push(newCmt);\r\n      }\r\n    }\r\n    setCmt(\"\");\r\n    document.getElementById(\"input_cmt\").value = \"\";\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <NotiForm todos={todos} edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n  if (role !== \"student\") {\r\n    if (comment) {\r\n      return todos.map((todo, index) => (\r\n        <div>\r\n          <Noti_element className='todo-row' key={index}>\r\n            <Noti_content key={todo.id}>{todo.content}</Noti_content>\r\n            <Noti_icon className='icons'>\r\n              {/* <TiEdit\r\n                style={{ width: \"2rem\", height: \"2rem\", color: \"white\" }}\r\n                onClick={() => setEdit({ id: todo.id, value: todo.content })}\r\n                className=\"edit-icon\"\r\n              /> */}\r\n              <FaReplyAll\r\n                className='fas fa-reply'\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"0.5rem\",\r\n                }}\r\n                onClick={() => setComment(!comment)}></FaReplyAll>\r\n              <RiCloseCircleLine\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"0.5rem\",\r\n                }}\r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n              />\r\n            </Noti_icon>\r\n          </Noti_element>\r\n          <Comment comments={todo.comment} />\r\n          <Noti_reply>\r\n            <Reply_content\r\n              id='input_cmt'\r\n              placeholder='Thêm phản hồi cho thông báo trên ...'\r\n              onChange={handleChange}></Reply_content>\r\n            <SendRep_btn onClick={() => handleSubmit(todo.id)}>GỬI</SendRep_btn>\r\n          </Noti_reply>\r\n        </div>\r\n      ));\r\n    } else {\r\n      return todos.map((todo, index) => (\r\n        <div>\r\n          <Noti_element className='todo-row' key={index}>\r\n            <Noti_content key={todo.id}>{todo.content}</Noti_content>\r\n            <Noti_icon className='icons'>\r\n              {/* <TiEdit\r\n                style={{ width: \"2rem\", height: \"2rem\", color: \"white\" }}\r\n                onClick={() => setEdit({ id: todo.id, value: todo.content })}\r\n                className=\"edit-icon\"\r\n              /> */}\r\n              <FaReplyAll\r\n                className='fas fa-reply'\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"0.5rem\",\r\n                }}\r\n                onClick={() => setComment(!comment)}></FaReplyAll>\r\n              <RiCloseCircleLine\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"0.5rem\",\r\n                }}\r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n              />\r\n            </Noti_icon>\r\n          </Noti_element>\r\n        </div>\r\n      ));\r\n    }\r\n  } else {\r\n    if (comment === false) {\r\n      return todos.map((todo, index) => (\r\n        <div>\r\n          <Noti_element className='todo-row' key={index}>\r\n            <Noti_content key={todo.id}>{todo.content}</Noti_content>\r\n            <Noti_icon>\r\n              <FaReplyAll\r\n                className='fas fa-reply'\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"2rem\",\r\n                }}\r\n                onClick={() => setComment(!comment)}></FaReplyAll>{\" \"}\r\n            </Noti_icon>\r\n          </Noti_element>\r\n          <Noti_reply></Noti_reply>\r\n        </div>\r\n      ));\r\n    } else {\r\n      return todos.map((todo, index) => (\r\n        <div>\r\n          <Noti_element className='todo-row' key={index}>\r\n            <Noti_content key={todo.id}>{todo.content}</Noti_content>\r\n            <Noti_icon>\r\n              <FaReplyAll\r\n                className='fas fa-reply'\r\n                style={{\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  color: \"white\",\r\n                  marginLeft: \"2rem\",\r\n                }}\r\n                onClick={() => setComment(!comment)}></FaReplyAll>{\" \"}\r\n            </Noti_icon>\r\n          </Noti_element>\r\n          <Comment comments={todo.comment} />\r\n          <Noti_reply>\r\n            <Reply_content\r\n              id='input_cmt'\r\n              placeholder='Thêm phản hồi cho thông báo trên ...'\r\n              onChange={handleChange}></Reply_content>\r\n            <SendRep_btn onClick={() => handleSubmit(todo.id)}>GỬI</SendRep_btn>\r\n          </Noti_reply>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n};\r\n\r\nexport default Todo;\r\n","E:\\Code\\BTLW\\student_management\\client\\src\\API\\Config.js",[],"E:\\Code\\BTLW\\student_management\\client\\src\\HomePage\\Component\\Noti\\Comment.js",["130","131","132","133","134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Comment_site = styled.div`\r\n  width: 75%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: rgb(202, 202, 202);\r\n  padding: 1.2rem 2rem;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Comment_content = styled.p`\r\n  // text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: #0c67b3;\r\n  font-size: 1.5rem;\r\n  line-height: 1.6rem;\r\n`;\r\n\r\nconst Comment_id = styled.p`\r\n  // text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: #0c67b3;\r\n  font-size: 1.8rem;\r\n  line-height: 2.1rem;\r\n  font-weight: bold;\r\n`;\r\nconst Comment_title = styled.p`\r\n  // text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n`;\r\nconst Cmt = styled.div`\r\n  background-color: white;\r\n  padding: 1rem 1rem;\r\n  border-radius: 5px;\r\n  transition: 0.3s all ease;\r\n  &:hover {\r\n    box-shadow: 1px 1px 4px 4px rgba(0, 0, 0, 0.2),\r\n      1px 1px 6px 6px rgba(0, 0, 0, 0.19);\r\n  }\r\n`;\r\n\r\nconst Comment = ({ comments }) => {\r\n  return comments.map((cmt, index) => (\r\n    <Comment_site key={index}>\r\n      <Cmt>\r\n        <Comment_id>{cmt.msv}:</Comment_id>\r\n        <Comment_content>{cmt.cmt}</Comment_content>\r\n      </Cmt>\r\n    </Comment_site>\r\n  ));\r\n};\r\nexport default Comment;\r\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":157,"column":7,"nodeType":"142","messageId":"143","endLine":157,"endColumn":24},{"ruleId":"140","severity":1,"message":"144","line":61,"column":7,"nodeType":"142","messageId":"143","endLine":61,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":153,"column":7,"nodeType":"142","messageId":"143","endLine":153,"endColumn":15},{"ruleId":"140","severity":1,"message":"146","line":69,"column":10,"nodeType":"142","messageId":"143","endLine":69,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":106,"column":11,"nodeType":"149","endLine":106,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":119,"column":11,"nodeType":"149","endLine":119,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":133,"column":11,"nodeType":"149","endLine":133,"endColumn":28},{"ruleId":"140","severity":1,"message":"150","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":15},{"ruleId":"140","severity":1,"message":"151","line":2,"column":38,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":103,"column":17,"nodeType":"149","endLine":103,"endColumn":34},{"ruleId":"140","severity":1,"message":"154","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":16},{"ruleId":"140","severity":1,"message":"155","line":95,"column":10,"nodeType":"142","messageId":"143","endLine":95,"endColumn":19},{"ruleId":"140","severity":1,"message":"156","line":95,"column":21,"nodeType":"142","messageId":"143","endLine":95,"endColumn":28},{"ruleId":"140","severity":1,"message":"157","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"158","line":1,"column":28,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"159","line":29,"column":7,"nodeType":"142","messageId":"143","endLine":29,"endColumn":20},{"ruleId":"147","severity":1,"message":"160","line":46,"column":5,"nodeType":"149","endLine":46,"endColumn":31},{"ruleId":"147","severity":1,"message":"161","line":48,"column":9,"nodeType":"149","endLine":48,"endColumn":21},{"ruleId":"147","severity":1,"message":"162","line":49,"column":9,"nodeType":"149","endLine":49,"endColumn":26},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'chooseInfoTeacher' is assigned a value but never used.","Identifier","unusedVar","'Title1' is assigned a value but never used.","'Comment2' is assigned a value but never used.","'PeopleSettings' is defined but never used.","react/jsx-pascal-case","Imported JSX component Input_container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'CallApi' is defined but never used.","'useReducer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TiEdit' is defined but never used.","'showReply' is assigned a value but never used.","'setShow' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Comment_title' is assigned a value but never used.","Imported JSX component Comment_site must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Comment_id must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Comment_content must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]