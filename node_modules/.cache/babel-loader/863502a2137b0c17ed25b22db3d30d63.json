{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\BTLW\\\\student_management\\\\client\\\\src\\\\Chat\\\\Chat.js\";\n// import React from \"react\";\n// import { db } from \"./Firebase.js\";\n// import moment from \"moment\";\n\n// // export const Chat = () => {\n//   // var Message = ``;\n//   // var savedMessage = true;\n//   const username = sessionStorage.getItem(\"msv\");\n//   // var showChat = document.getElementById(\"messages\");\n//   const sendMessage = async (e) => {\n//     e.preventDefault();\n//     // get values to be submitted\n//     const timestamp = Date.now();\n//     const messageInput = document.getElementById(\"message-input\");\n//     const message = messageInput.value;\n//     console.log(message);\n\n//     // clear the input box\n//     messageInput.value = \"\";\n\n//     //auto scroll to bottom\n//     document\n//       .getElementById(\"messages\")\n//       .scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n\n//     // create db collection and send in the data\n//     await db.ref(\"messages/\" + timestamp).set({\n//       username,\n//       message,\n//       timestamp,\n//     });\n\n//     // savedMessage = true;\n//   };\n//   var message = \"\";\n//   // const displayChat = () => {\n//   const fetchChat = db.ref(\"messages/\");\n//   // check for new messages using the onChildAdded event listener\n//   fetchChat.on(\"child_added\", function (snapshot) {\n//     const messages = snapshot.val();\n//     message += `<li class=${\n//       username === messages.username ? \"sent\" : \"receive\"\n//     }><span>${messages.username}:${moment(\n//       messages.timestamp\n//     ).calendar()}: </span>${messages.message}</li>`;\n\n//     // if (savedMessage) {\n//     //   document.getElementById(\"messages\").append(message);\n//     // }\n//     var messageElement = document.createElement(\"div\");\n//     messageElement.innerText = message;\n//     document.getElementById(\"messages\").append(messageElement);\n//   });\n//   // };\n//   return (\n//     <div id=\"chat\">\n//       <ul id=\"messages\"></ul>\n//       <form id=\"message-form\" onSubmit={(e) => sendMessage(e)}>\n//         <input id=\"message-input\" type=\"text\" />\n//         <button id=\"message-btn\" type=\"submit\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\nimport React from \"react\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { PeopleSettings } from \"react-chat-engine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = () => {\n  const username = sessionStorage.getItem(\"msv\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"hidden\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ChatEngine, {\n      height: \"100vh\",\n      projectID: \"458c42a0-f2ff-4ffa-bafa-b0f1066903ee\",\n      userName: username,\n      userSecret: username\n\n      // onNewMessage={() =>\n      //   new Audio(\n      //     \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\n      //   ).play()\n      // }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","ChatEngine","PeopleSettings","Chat","username","sessionStorage","getItem","overflow"],"sources":["E:/Code/BTLW/student_management/client/src/Chat/Chat.js"],"sourcesContent":["// import React from \"react\";\r\n// import { db } from \"./Firebase.js\";\r\n// import moment from \"moment\";\r\n\r\n// // export const Chat = () => {\r\n//   // var Message = ``;\r\n//   // var savedMessage = true;\r\n//   const username = sessionStorage.getItem(\"msv\");\r\n//   // var showChat = document.getElementById(\"messages\");\r\n//   const sendMessage = async (e) => {\r\n//     e.preventDefault();\r\n//     // get values to be submitted\r\n//     const timestamp = Date.now();\r\n//     const messageInput = document.getElementById(\"message-input\");\r\n//     const message = messageInput.value;\r\n//     console.log(message);\r\n\r\n//     // clear the input box\r\n//     messageInput.value = \"\";\r\n\r\n//     //auto scroll to bottom\r\n//     document\r\n//       .getElementById(\"messages\")\r\n//       .scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\r\n\r\n//     // create db collection and send in the data\r\n//     await db.ref(\"messages/\" + timestamp).set({\r\n//       username,\r\n//       message,\r\n//       timestamp,\r\n//     });\r\n\r\n//     // savedMessage = true;\r\n//   };\r\n//   var message = \"\";\r\n//   // const displayChat = () => {\r\n//   const fetchChat = db.ref(\"messages/\");\r\n//   // check for new messages using the onChildAdded event listener\r\n//   fetchChat.on(\"child_added\", function (snapshot) {\r\n//     const messages = snapshot.val();\r\n//     message += `<li class=${\r\n//       username === messages.username ? \"sent\" : \"receive\"\r\n//     }><span>${messages.username}:${moment(\r\n//       messages.timestamp\r\n//     ).calendar()}: </span>${messages.message}</li>`;\r\n\r\n//     // if (savedMessage) {\r\n//     //   document.getElementById(\"messages\").append(message);\r\n//     // }\r\n//     var messageElement = document.createElement(\"div\");\r\n//     messageElement.innerText = message;\r\n//     document.getElementById(\"messages\").append(messageElement);\r\n//   });\r\n//   // };\r\n//   return (\r\n//     <div id=\"chat\">\r\n//       <ul id=\"messages\"></ul>\r\n//       <form id=\"message-form\" onSubmit={(e) => sendMessage(e)}>\r\n//         <input id=\"message-input\" type=\"text\" />\r\n//         <button id=\"message-btn\" type=\"submit\">\r\n//           Send\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport { PeopleSettings } from \"react-chat-engine\";\r\nexport const Chat = () => {\r\n  const username = sessionStorage.getItem(\"msv\");\r\n  return (\r\n    <div style={{ overflow: \"hidden\" }}>\r\n      <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"458c42a0-f2ff-4ffa-bafa-b0f1066903ee\"\r\n        userName={username}\r\n        userSecret={username}\r\n\r\n        // onNewMessage={() =>\r\n        //   new Audio(\r\n        //     \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\r\n        //   ).play()\r\n        // }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,cAAc,QAAQ,mBAAmB;AAAC;AACnD,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB,MAAMC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;EAC9C,oBACE;IAAK,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAA,uBACjC,QAAC,UAAU;MACT,MAAM,EAAC,OAAO;MACd,SAAS,EAAC,sCAAsC;MAChD,QAAQ,EAAEH,QAAS;MACnB,UAAU,EAAEA;;MAEZ;MACA;MACA;MACA;MACA;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAlBWD,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}