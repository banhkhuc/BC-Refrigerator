{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\BTLW\\\\student_management\\\\client\\\\src\\\\ListStudent\\\\Components\\\\ExportData.js\";\nimport React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportToExcel = _ref => {\n  let {\n    apiData,\n    fileName\n  } = _ref;\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    console.log(data);\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: e => exportToCSV(apiData, fileName),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fa fa-file-export\",\n      children: \" \\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \"Xu\\u1EA5t file Excel\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = ExportToExcel;\nexport default ExportToExcel;\nvar _c;\n$RefreshReg$(_c, \"ExportToExcel\");","map":{"version":3,"names":["React","FileSaver","XLSX","ExportToExcel","apiData","fileName","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","write","bookType","type","Blob","console","log","saveAs","e"],"sources":["E:/Code/BTLW/student_management/client/src/ListStudent/Components/ExportData.js"],"sourcesContent":["import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst ExportToExcel = ({ apiData, fileName }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    console.log(data);\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary\"\r\n      onClick={(e) => exportToCSV(apiData, fileName)}\r\n    >\r\n      <span className=\"fa fa-file-export\"> &nbsp;</span>Xuáº¥t file Excel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ExportToExcel;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC;AAE7B,MAAMC,aAAa,GAAG,QAA2B;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAS,CAAC;EAC1C,MAAMC,QAAQ,GACZ,iFAAiF;EACnF,MAAMC,aAAa,GAAG,OAAO;EAE7B,MAAMC,WAAW,GAAG,CAACJ,OAAO,EAAEC,QAAQ,KAAK;IACzC,MAAMI,EAAE,GAAGP,IAAI,CAACQ,KAAK,CAACC,aAAa,CAACP,OAAO,CAAC;IAC5C,MAAMQ,EAAE,GAAG;MAAEC,MAAM,EAAE;QAAEC,IAAI,EAAEL;MAAG,CAAC;MAAEM,UAAU,EAAE,CAAC,MAAM;IAAE,CAAC;IACzD,MAAMC,WAAW,GAAGd,IAAI,CAACe,KAAK,CAACL,EAAE,EAAE;MAAEM,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACvE,MAAML,IAAI,GAAG,IAAIM,IAAI,CAAC,CAACJ,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAEb;IAAS,CAAC,CAAC;IACxDe,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjBb,SAAS,CAACsB,MAAM,CAACT,IAAI,EAAET,QAAQ,GAAGE,aAAa,CAAC;EAClD,CAAC;EAED,oBACE;IACE,SAAS,EAAC,iBAAiB;IAC3B,OAAO,EAAGiB,CAAC,IAAKhB,WAAW,CAACJ,OAAO,EAAEC,QAAQ,CAAE;IAAA,wBAE/C;MAAM,SAAS,EAAC,mBAAmB;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,wBACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QAAS;AAEb,CAAC;AAAC,KAtBIF,aAAa;AAwBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}